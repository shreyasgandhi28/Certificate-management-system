version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cert_app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
      - ./storage:/var/www/html/storage
    networks:
      - cert_network
    depends_on:
      - db
      - redis

  nginx:
    image: nginx:alpine
    container_name: cert_nginx
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - cert_network
    depends_on:
      - app

  db:
    image: mysql:8.0
    container_name: cert_db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: certificate_db
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_PASSWORD: db_password
      MYSQL_USER: db_user
    volumes:
      - db_data:/var/lib/mysql
    ports:
      - "3307:3306"
    networks:
      - cert_network

  redis:
    image: redis:alpine
    container_name: cert_redis
    restart: unless-stopped
    networks:
      - cert_network

  mailcatcher:
    image: schickling/mailcatcher
    container_name: cert_mailcatcher
    restart: unless-stopped
    ports:
      - "1080:1080"
    networks:
      - cert_network

volumes:
  db_data:

networks:
  cert_network:
    driver: bridge
