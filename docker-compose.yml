version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cert_app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
      - ./public:/var/www/public
      - ./storage:/var/www/html/storage
      - ./database/database.sqlite:/var/www/html/database/database.sqlite
    networks:
      - cert_network
    depends_on:
      - redis
    environment:
      - APP_ENV=local
      - APP_KEY=${APP_KEY}
      - APP_DEBUG=true
      - DB_CONNECTION=sqlite
      - DB_DATABASE=/var/www/html/database/database.sqlite

  nginx:
    image: nginx:alpine
    container_name: cert_nginx
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./:/var/www/html
      - ./public:/var/www/public
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - cert_network
    depends_on:
      - app

  redis:
    image: redis:alpine
    container_name: cert_redis
    restart: unless-stopped
    networks:
      - cert_network

  mailcatcher:
    image: schickling/mailcatcher
    container_name: cert_mailcatcher
    restart: unless-stopped
    ports:
      - "1080:1080"
    networks:
      - cert_network

networks:
  cert_network:
    driver: bridge
